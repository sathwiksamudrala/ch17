class abc
{
 public static void main(String args[])
 {
   int n1=0;
   int n2=1;
   int n3=0;
   System.out.println(n1+" "+n2+" ");
   for(int i=1;i<=8;i++)
   {
     n3=n1+n2;
     System.out.println(n3+" ");
     n1=n2;
     n2=n3;
   }
 
 }
}

----------------------------------------------------------------------------------------
class range
{
 public static void main(String args[])
 {
   for(int x=1;x<=100;x++)
   {
     int count=0;
    for(int start=1;start<=x;start++)
    {
     if(x%start==0)
     { 
       count++;
     }
    }
    if(count==2)
    {
     System.out.println(x+" prime number");
    }
   }
  }
}

----------------------------------------------------------------------------------------
class Def
{
 public static void main(String args[])
 {
   String s="hello all good morning";
   String a[]=s.split(" ");
   String v="";
   for(int x=0;x<a.length;x++)
   {
     String temp=a[x];
     String k="";
     for(int y=0;y<temp.length();y++)
     {
       char c=temp.charAt(y);
       
       if(y==0||y==temp.length())
       {
          char d=Character.toUpperCase(c);
          k=k+d;
       }
       else
       {
          k=k+c;
       }
       
     }
     v=v+" "+k;
   }
   System.out.println(v);
 }
}


-------------------------------------------------------------------------------------------------
class Minimum
{
 public static void main(String args[])
 {
   int num1=3;
   int num2=6;
   int num3=9;
   System.out.println((num1<num2&&num1<num3)?num1:(num2<num3)?num2:num3);
 }
}

--------------------------------------------------------------------------------------------------------
class Duplicate
{
 public static void main(String args[])
 {
  int a[]={1,2,2,3,4,5,4,6,3,3,6,};
  boolean b[]=new boolean[a.length];
  for(int x=0;x<a.length;x++)
  {
   if(b[x])
   {
      continue;
   }
    int count=1;
    for(int y=x+1;y<a.length;y++)
    {
      if(a[x]==a[y])
      {
        count++;
        b[y]=true;
      }
     }
     if(count>1)
     {
       System.out.println(a[x]+" frequency is "+count);
     }
    }
   }
 }

------------------------------------------------------------------------------------------------------------
class klg
{
  public static void main(String args[])
  {
    int a[]=new int[]{3,2,1,4};
    int pro=1;
    for(int i=0;i<a.length;i++)
    {
      pro=pro*a[i];
    }
    for(int i=0;i<a.length;i++)
    {
      a[i]=pro/a[i];
    }
    for(int p:a)
    {
      System.out.print(p+" ");
}
  }
}

-----------------------------------------------------------------------------------------------------------
--------------

class mno
{
 public static void main(String args[])
  {
    String s="hello all all";
    String s1[]=s.split(" ");
    boolean b[]=new boolean[s.length()];
    for(int x=0;x<s1.length;x++)
    {
      String a="";
      a+=s1[x];
      if(b[x]==true)
      {
      continue;
      }
      int count=0;
      for(int y=x+1;y<s1.length;y++)
      {
        String c="";
        c+=sa[y];
              if(a.equals(b))
        {
         count++;
         b[y]=true;
        }
      
      }
      if(count==0)
      {
        System.out.println(a+" is unique word");
      }
    }
   }
}    

-----------------------------------------------------------------------------------------------------------
class Pattern
{
  public static void main(String args[])
  {
    Scanner sc=new Scanner(System.in);
    int rows=sc.nextInt();
    int cols=sc.nextInt();
    for(int r=1;r<=rows;r++)
    {
      for(int c=1;c<r;c++)
      {
        System.out.print("  ");
      }
      for(int c=cols;c>=r;c--)
      {
        System.out.print(c+" ");
      }
      System.out.println();
    }
  }
}
----------------------------------------------------------------------------------------------------
class Custom 
{
  public static void main(String[] args) throws AlwaysLateException
  {
    int time=9;
    double arrival=9.30;
    if(arrival<time)
    {
      System.out.println("good punctual batch");
    }
    else
    {
      throw new AlwaysLateException("never exception");
    }
  }
}
class AlwaysLateException extends Exception
{
  AlwaysLateException(String msg)
  {
    super(msg);
  }
}

class Hello
{
public static void main(String[] args)
{
	System.out.println("Hello world);
}
}
